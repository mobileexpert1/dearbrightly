# Generated by Django 2.0.5 on 2018-08-21 14:25

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import localflavor.us.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(max_length=255, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('last_modified_datetime', models.DateTimeField(auto_now=True, verbose_name='last modified')),
                ('big_commerce_user_id', models.CharField(blank=True, max_length=512, verbose_name='Big Commerce User ID')),
                ('big_commerce_user_address_id', models.CharField(blank=True, max_length=512, verbose_name='Big Commerce User Address ID')),
                ('sappira_user_id', models.CharField(blank=True, max_length=512, null=True, verbose_name='Sappira User ID')),
                ('questionnaire_status', models.CharField(choices=[('Email Not Sent', 'email not sent'), ('Email Sent', 'email sent'), ('Incomplete', 'incomplete'), ('Reminder Sent', 'reminder sent'), ('Complete', 'complete')], default='Email Not Sent', max_length=32, verbose_name='QuestionnaireStatus')),
                ('address_line1', models.CharField(max_length=128, verbose_name='Address Line 1')),
                ('address_line2', models.CharField(blank=True, max_length=128, verbose_name='Address Line 2')),
                ('city', models.CharField(max_length=64, verbose_name='City')),
                ('state', localflavor.us.models.USStateField(max_length=2)),
                ('postal_code', localflavor.us.models.USZipCodeField(max_length=10)),
                ('country', django_countries.fields.CountryField(default='US', max_length=2)),
                ('phone', localflavor.us.models.PhoneNumberField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='PasswordResetToken',
            fields=[
                ('key', models.CharField(max_length=40, primary_key=True, serialize=False, verbose_name='Key')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='Created')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='password_reset_token', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Token',
                'verbose_name_plural': 'Tokens',
                'abstract': False,
            },
        ),
    ]
