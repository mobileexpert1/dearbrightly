# Generated by Django 2.0.5 on 2022-07-18 09:05
import logging

from django.db import migrations
from django.db.models import Count, Q

logger = logging.getLogger(__name__)


def delete_subscriptions(subscriptions):
    for subscription in subscriptions:
        logger.debug(
            f"[remove_duplicate_plans][Subscription] "
            f"customer ID: {subscription.customer_id}, "
            f"subscription ID: {subscription.id}, "
            f"created_datetime: {subscription.created_datetime}, "
            f"is_active: {subscription.is_active}, "
            f"current_period_start_datetime: {subscription.current_period_start_datetime}, "
            f"current_period_end_datetime: {subscription.current_period_end_datetime}, "
            f"dup product ID: {subscription.product_id}, "
            f"cancel_datetime: {subscription.cancel_datetime}, "
            f"cancel_reason: {subscription.cancel_reason}"
        )
        subscription.delete()


def remove_duplicate_plans(apps, schema_editor):
    Subscription = apps.get_model("subscriptions", "Subscription")
    User = apps.get_model("users", "User")
    Product = apps.get_model("products", "Product")
    list_with_duplicate_plans_data = (
        Subscription.objects.values("customer", "product")
        .annotate(Count("id"))
        .order_by()
        .filter(id__count__gt=1)
    )
    for plan_data in list_with_duplicate_plans_data:
        customers = User.objects.filter(id=plan_data.get("customer"))
        customer = customers.latest('date_joined') if customers else None
        products = Product.objects.filter(id=plan_data.get("product"))
        product = products.latest('created_datetime') if products else None
        subscriptions = Subscription.objects.filter(
            customer=customer,
            product=product,
        )
        if subscriptions.filter(is_active=False).exists():
            delete_subscriptions(subscriptions=subscriptions.filter(is_active=False))
        else:
            subscription = subscriptions.latest('created_datetime')
            logger.debug(
                f"[remove_duplicate_plans][Subscription] "
                f"customer ID: {subscription.customer_id}, "
                f"subscription ID: {subscription.id}, "
                f"created_datetime: {subscription.created_datetime}, "
                f"is_active: {subscription.is_active}, "
                f"current_period_start_datetime: {subscription.current_period_start_datetime}, "
                f"current_period_end_datetime: {subscription.current_period_end_datetime}, "
                f"dup product ID: {subscription.product_id}, "
                f"cancel_datetime: {subscription.cancel_datetime}, "
                f"cancel_reason: {subscription.cancel_reason}"
            )
            subscription.delete()


class Migration(migrations.Migration):
    dependencies = [
        ("subscriptions", "0028_auto_20220121_2345"),
        ("users", "0049_remove_user_chart_mogul_user_uuid"),
        ("products", "0038_auto_20220223_1143"),
        ("orders", "0114_order_coupon"),
    ]

    operations = [
        migrations.RunPython(remove_duplicate_plans, reverse_code=migrations.RunPython.noop),
    ]
