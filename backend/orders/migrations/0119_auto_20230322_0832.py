# Generated by Django 2.0.5 on 2023-03-22 08:32

from django.db import migrations
from django.db.models import Q
from orders.models import Order, Inventory
from utils.logger_utils import logger


def update_order_item_bottle_type(apps, schema_editor):
    OrderItem = apps.get_model('orders', 'OrderItem')
    order_items = OrderItem.objects.filter(
        (Q(order__status=Order.Status.shipped) | Q(order__status=Order.Status.pending_pharmacy)) &
        Q(product__id=33) &
        Q(bottle_type=Inventory.BottleType.refillable_bottle) &
        Q(order__customer__isnull=False)
    )
    for order_item in order_items:
        if order_item.order.customer.orders.filter(
            (Q(status=Order.Status.shipped) | Q(status=Order.Status.pending_pharmacy)) &
            (Q(order_items__product__id=9) | Q(order_items__product__id=11)) &
            Q(order_items__bottle_type=Inventory.BottleType.refillable_bottle)
        ).exists():
            order_item.bottle_type = Inventory.BottleType.refill
            order_item.save(update_fields=["bottle_type"])
            logger.debug(
                f"[update_order_item_bottle_type] "
                f"Bottle Type updated for Order Item ID: {order_item.pk} "
                f"Customer ID: {order_item.order.customer.pk} "
                f"Order ID: {order_item.order.pk}"
            )

class Migration(migrations.Migration):

    dependencies = [
        ('orders', '0118_auto_20230517_0926'),
    ]

    operations = [
        migrations.RunPython(update_order_item_bottle_type, reverse_code=migrations.RunPython.noop),
    ]
